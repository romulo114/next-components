import fsPromise from 'fs/promises';
import { downloadIcons, scaleIcons, fixIcons, writeIcons, exists } from './utils';

const COMMENT = "/** DO NOT EDIT DIRECTLY. \
  This file was generated by pulling from feather repo. \
  If you want to update icons to latest version, run yarn icon:feather **/";
const FEATHER_ICON_REPO = 'https://github.com/feathericons/feather/archive/refs/heads/master.zip';
const ICON_VIEWBOX_SIZE = 20;
const TEMP_FOLDER = './temp';

const main = async (outPath: string) => {
  if (!await exists(TEMP_FOLDER)) {
    await fsPromise.mkdir(TEMP_FOLDER);
  }

  const icons = await downloadIcons(FEATHER_ICON_REPO, /feather-master\/icons\/[0-9a-zA-Z-_]*.svg$/);
  const scaledIcons = await scaleIcons(icons, ICON_VIEWBOX_SIZE, 'feather');
  const fixedIcons = await fixIcons(scaledIcons, TEMP_FOLDER);
  await writeIcons(fixedIcons, outPath, COMMENT);
  await fsPromise.rmdir(TEMP_FOLDER, { recursive: true });
}

const outputPath = process.argv.slice(2)[0];
main(outputPath)
  .then(() => console.log(`All paths have been written to ${outputPath}`))
  .catch(e => console.error(JSON.stringify(e.message)))
